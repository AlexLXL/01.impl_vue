{"version":3,"file":"vue.js","sources":["../../src/utils.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["export function isFunction(val) {\r\n    return typeof val === \"function\";\r\n}\r\n\r\nexport function isObject(val) {\r\n    return typeof val === \"object\" && val !== null;\r\n}\r\n\r\nexport function isArray(val) {\r\n    return Array.isArray(val);\r\n}","let oldArrayPrototype = Array.prototype;\r\n\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n\r\nlet methods = [\"push\", \"shift\", \"pop\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach((method) => {\r\n    arrayMethods[method] = function(...args){\r\n        oldArrayPrototype[method].call(this, ...args);\r\n\r\n        // 监控新增的值\r\n        let inserted = null;\r\n        let ob = this.__ob__;\r\n        switch (method) {\r\n            case \"splice\":\r\n                inserted = args.slice(2);\r\n            case \"push\":\r\n            case \"unshift\":\r\n                inserted = args;\r\n                break;\r\n        }\r\n        if (inserted) ob.observeArray(inserted);\r\n    }\r\n})","import {isArray, isObject} from \"../utils\";\r\nimport {arrayMethods} from \"./array\";\r\n\r\nexport function observe(value) {\r\n    if (value.__ob__) return;\r\n    if (!isObject(value)) return;\r\n\r\n    return new Observer(value);\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n\r\n        if (isArray(value)) {\r\n            value.__proto__ = arrayMethods;\r\n            this.observeArray(value);\r\n        }else {\r\n            this.walk(value);\r\n        }\r\n    }\r\n\r\n    walk(data) {\r\n        // 监控对象\r\n        Object.keys(data).forEach((key) => {\r\n            defineReactive(data, key, data[key]);\r\n        })\r\n    }\r\n\r\n    observeArray(data) {\r\n        // 监控数组\r\n        data.forEach((item) => observe(item)); // 数组内的引用类型添加监控，[[], {}]\r\n    }\r\n}\r\n\r\nfunction defineReactive(obj, key, value) {\r\n    observe(value); // 递归监控value\r\n\r\n    Object.defineProperty(obj, key, {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            if (newValue === value) return;\r\n            observe(newValue); // 新值加监控\r\n            value = newValue;\r\n        }\r\n    })\r\n}","import {isFunction} from \"./utils\";\r\nimport {observe} from \"./observe/index.js\";\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    \r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n    observe(data);\r\n    \r\n    for (let key in data) {\r\n        proxy(vm, key, \"_data\");\r\n    }\r\n    \r\n    console.log(data);\r\n    // data.arr.push(3);\r\n    // console.log(vm.arr);\r\n    // vm.arr[1].push(3);\r\n    // vm.name = {a: 2};\r\n    // vm.name.a = 20;\r\n    // vm.arr.push({a: 100});\r\n    // vm.arr[3].a = 200;\r\n}\r\n\r\nfunction proxy(vm, key, source) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key];\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}","import {initState} from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        const vm = this;\r\n        vm.$options = options;\r\n\r\n        initState(vm);\r\n\r\n        if (vm.$options.el) {\r\n            // --snip-- 挂载\r\n        }\r\n    }\r\n}\r\n","import {initMixin} from \"./init\";\r\n\r\nfunction Vue(option) {\r\n    this._init(option);\r\n}\r\n\r\ninitMixin(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","observe","value","Observer","constructor","defineProperty","enumerable","__proto__","walk","data","keys","key","defineReactive","item","obj","get","set","newValue","initState","vm","opts","$options","initData","_data","proxy","console","log","source","initMixin","Vue","_init","options","el","option"],"mappings":"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"}